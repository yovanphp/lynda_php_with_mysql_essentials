Encoding get values in links and URL
====================================
There are reserved characters for our URLS. The following list of characters are reserved and will cause pbs if we use them directly in the URL.
!, #, $, %, &, ', (, ), *, +, etc.

When we construct URLS for links we must encode the reserved characters so that they do not interfere with the function of the URL.
Encoding a reserved character means converting the character to a a string made of % and 2_digit_hex_val example %20.

We would like to encode the reserved characher before requesting for the page and once the page is received, we would like to decode them.

To encode a string in PHP: urlencode($string)
- letters, numbers, underscore, dash are unchanged
- reserved characters become % + 2-digit hexadecimal string
- Spaces become "+"

If we don't encode for example Johnson & Johnson in the browser bar we see ?id=7&company=Johnson%20&%20Johnson
And in the page we will get $_GET['company'] = Johnson
We should use urlencode() while building the query parameters in our links.
When we use urlencode() we see: ?id=7&company=Johnson+%26+Johnson 
and successfully print $_GET['company'] = Johnson & Johnson
Spaces are encoded to + and & encoded to %26
Note: PHP automatically decodes the values of our query parameters before it assigns them to the $_GET superglobal.
URL encoding is important for GET requests only. When using cookies and POST we don't need to encode our data.

There exists a urldecode($string) method that can be used to decode strings. But here we do not need them.

Another string encoding function is rawurlencode():
- letters, numbers, underscore, dash are unchanged
- reserved characters become % + 2-digit hexadecimal string
- Spaces become "%20", i.e spaces are also encoded to a 2-digit hexadecimal value.
In the browser bar we see: ?id=7&company=Johnson%20%26%20Johnson and
successfully print $_GET['company'] = Johnson & Johnson onscreen.

If we view our source:
<p><a href="002-second.php?id=7&company=Johnson & Johnson">Second Page</a></p>
<p><a href="002-second.php?id=7&company=Johnson+%26+Johnson">Second Page with encoded url parameters</a></p>
<p><a href="002-second.php?id=7&company=Johnson%20%26%20Johnson">Second Page with raw encoded url parameters</a></p>

So when should we use rawurlencode() VS urlencode
- Use rawurlencode when encoding the URL path i.e everything before the '?'. 
This is important for Apache to load the correct file (which may contain spaces).
- Use urlencode to encode the query string, i.e everything that comes after ?.
This is because spaces are better encoded with +.

However rawurlencode is more compatible generally - JS, AJAX and web services consumers will easily understand %20 for spaces.

But better use rawurlencode to encode the path and urlencode for the query string in our links.

Encoding HTML special characters
=================================
HTML has special characters for example open and close tags.
We can break our HTML if we use these reserved characters in our text - <, >, & and ". We have to encode these reserved HTML characters in their repective HTML entities : &lt;, &gt;, &amp;, &quot;
htmlspecialchars() and htmlentities() are functions used to encode HTML.

For example: <p><a href="#"><Click> & learn more</a></p>
Our browser will interprete <Click> as an HTML tag and break our code. 
htmlspecialchars('<Click> here & learn more')
We can view page source to see our encoded strings: <p><a href="#">&lt;Click&gt; here &amp; learn more</a></p>

Note: htmlspecialcharsdecode() is used to decode our encoded HTML strings, but we typically never use them as it is the browser that does that for us while showing us our text onscreen.

htmlentities() encode ALL characters in our strings to their equivalent HTML entities. For example #, $, % etc are converted.

$text = "ôé╣─ú" is printed as if we do not encode them.
If we view source we can see that the characters in our text has been converted to their equivalent HTML entities:
<p><a href="#">&ocirc;&eacute;╣─&uacute;</a></p>

htmlspecialchars() are used to encode our text so that we don't break our code.
htmlentities() is used to encode our text so that they are printed onscreen correctly. ALL characters in our text are  encoded to their equivalent HTML entities.

We should use rawurlencode(), urlencode and htmlspecialchars() in conjuction when using URL and links in PHP.
See 004-all_encoding.php
If we view source: <p><a href="php%2Fcreate%2Fpage%2Furl.php?param1=This+is+a+string+with+%3C+%3E&amp;param2=%26%23%3F%2A%24%5B%5D%2B+are+bad+characters">&lt;Click here &amp; learn more&gt;</a></p>

We should also encode our url with htmlspecialchars() so that our browser does not break our code if it contains special characters for example in query parameters.